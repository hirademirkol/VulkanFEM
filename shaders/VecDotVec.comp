#version 450

#extension GL_EXT_shader_atomic_float: enable // For atomicAdd
#extension GL_KHR_shader_subgroup_arithmetic: enable // For subgroupAdd and subgroupElect

#define index gl_GlobalInvocationID.x

#define real double

layout (local_size_x = 64) in; // A usual workgroup size, shader must be dispatched with numDoF/64 workgroups

// The buffers are provided via the tensors on C++ side
layout(binding = 0) buffer x1Buffer { real x1[]; };
layout(binding = 1) buffer x2Buffer { real x2[]; };
layout(binding = 2) buffer normBuffer { real result; };

void main()
{
    // Dot product calculation

    // Add the multiplication result for each thread on the subgroup, this is done synchronously
    real value = subgroupAdd(x1[index] * x2[index]);

    // Select one of the threads on the subgroup
    if(subgroupElect())
        // This thread atomically adds the result of the subgroup to the global result
        atomicAdd(result, value);
}